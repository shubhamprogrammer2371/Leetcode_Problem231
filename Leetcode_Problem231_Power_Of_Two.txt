bool isPowerOfTwo(int n){
    return ((n>0) && ((n & (n-1)) == 0));

// Consider n = 8 (1000) which is a power of two By performing Bitwise
// And with n-1 that is 7 (0111) will definitely results to 0.
// 0 = (0000)
// 1 = (0001) which is 2^0
// 2 = (0010) which is 2^1
// 3 = (0011)
// 4 = (0100) which is 2^2
// 5 = (0101)
// 6 = (0110)
// 7 = (0111)
// 8 = (1000) which is 2^3

// consider n = 7(0111) which is not a power of two by performing bitwise And with n-1 = 6(0110) will gives some number other than 0.
// In if condition we are checking n>0 because any number if we perform bitwise And with 0 results in 0 (i.e 0 is not a power of two) to omit this we are checking whether n>0.
}


--------------------------------------------------------------------------------------------------------------------------



bool isPowerOfTwo(int n){
    if(n < 1)
        return 0;
    long long  count = 1;
    while(1)
    {
        count *= 2;
        if(count == n || n == 1)
            return 1;
        else if(count > n)
            return 0;
    }
}



